[{"E:\\Projects\\Upsolve\\upsolve\\src\\index.js":"1","E:\\Projects\\Upsolve\\upsolve\\src\\App.js":"2","E:\\Projects\\Upsolve\\upsolve\\src\\reportWebVitals.js":"3","E:\\Projects\\Upsolve\\upsolve\\src\\loginPage.js":"4","E:\\Projects\\Upsolve\\upsolve\\src\\HomePage.js":"5","E:\\Projects\\Upsolve\\upsolve\\src\\LogoutPage.js":"6","E:\\Projects\\Upsolve\\upsolve\\src\\ErroPage.js":"7","E:\\Projects\\Upsolve\\upsolve\\src\\RegisterPage.js":"8","E:\\Projects\\Upsolve\\upsolve\\src\\Leaderboard\\LeaderboardPage.js":"9","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\Challenge.js":"10","E:\\Projects\\Upsolve\\upsolve\\src\\Profile\\ProfileRoute.js":"11","E:\\Projects\\Upsolve\\upsolve\\src\\NavigationMenu.js":"12","E:\\Projects\\Upsolve\\upsolve\\src\\BoxTitile.js":"13","E:\\Projects\\Upsolve\\upsolve\\src\\Leaderboard\\leaderboard.js":"14","E:\\Projects\\Upsolve\\upsolve\\src\\Api\\problem.api.js":"15","E:\\Projects\\Upsolve\\upsolve\\src\\Api\\auth.api.js":"16","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ChallengeContent.js":"17","E:\\Projects\\Upsolve\\upsolve\\src\\authGaurd.js":"18","E:\\Projects\\Upsolve\\upsolve\\src\\Profile\\ProfilePage.js":"19","E:\\Projects\\Upsolve\\upsolve\\src\\Leaderboard\\entry.js":"20","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ChallengeTimer.js":"21","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ChallengeDailyQues.js":"22","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ChallengeUpsolveQues.js":"23","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ProblemDescription.js":"24","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ProblemCardTitle.js":"25"},{"size":480,"mtime":1610010526093,"results":"26","hashOfConfig":"27"},{"size":1225,"mtime":1610010526084,"results":"28","hashOfConfig":"27"},{"size":375,"mtime":1608887333064,"results":"29","hashOfConfig":"27"},{"size":2550,"mtime":1610011197211,"results":"30","hashOfConfig":"27"},{"size":322,"mtime":1610010526088,"results":"31","hashOfConfig":"27"},{"size":305,"mtime":1610010526091,"results":"32","hashOfConfig":"27"},{"size":417,"mtime":1610010526088,"results":"33","hashOfConfig":"27"},{"size":5877,"mtime":1610010526092,"results":"34","hashOfConfig":"27"},{"size":2829,"mtime":1610010526090,"results":"35","hashOfConfig":"27"},{"size":434,"mtime":1610010526085,"results":"36","hashOfConfig":"27"},{"size":1081,"mtime":1610010526092,"results":"37","hashOfConfig":"27"},{"size":1886,"mtime":1610010526091,"results":"38","hashOfConfig":"27"},{"size":191,"mtime":1610010526085,"results":"39","hashOfConfig":"27"},{"size":2050,"mtime":1610010526091,"results":"40","hashOfConfig":"27"},{"size":1648,"mtime":1610010526084,"results":"41","hashOfConfig":"27"},{"size":1456,"mtime":1610015222793,"results":"42","hashOfConfig":"27"},{"size":1771,"mtime":1610010526085,"results":"43","hashOfConfig":"27"},{"size":523,"mtime":1610010526092,"results":"44","hashOfConfig":"27"},{"size":26228,"mtime":1610011571709,"results":"45","hashOfConfig":"27"},{"size":2008,"mtime":1610010526090,"results":"46","hashOfConfig":"27"},{"size":1009,"mtime":1610010526086,"results":"47","hashOfConfig":"27"},{"size":1515,"mtime":1610010526086,"results":"48","hashOfConfig":"27"},{"size":1697,"mtime":1610010526086,"results":"49","hashOfConfig":"27"},{"size":2628,"mtime":1610010526087,"results":"50","hashOfConfig":"27"},{"size":481,"mtime":1610010526087,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1cxq667",{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"54"},"E:\\Projects\\Upsolve\\upsolve\\src\\index.js",[],["116","117"],"E:\\Projects\\Upsolve\\upsolve\\src\\App.js",["118"],"import './App.css';\r\nimport {BrowserRouter as Router, Link, Route, Switch} from 'react-router-dom';\r\nimport LeaderboardPage from './Leaderboard/LeaderboardPage';\r\nimport Challenge from './Challenge/Challenge'\r\nimport LoginPage from './loginPage';\r\nimport HomePage from './HomePage';\r\nimport LogoutPage from './LogoutPage';\r\nimport ErrorPage from './ErroPage';\r\nimport ProfileRoute from './Profile/ProfileRoute';\r\nimport RegisterPage from './RegisterPage';\r\n\r\nfunction App() {\r\n\r\n    return(\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/leaderboard\" component={LeaderboardPage}></Route>\r\n                <Route exact path=\"/challenge\" component={Challenge}></Route>\r\n                <Route exact path=\"/login\" component={LoginPage}></Route>\r\n                <Route exact path=\"/register\" component={RegisterPage}></Route>\r\n                <Route exact path=\"/logout\" component={LogoutPage}></Route>\r\n                <Route exact path=\"/profile/:username\" component={ProfileRoute}></Route>\r\n                <Route exact path=\"/\" component={HomePage}></Route>\r\n                <Route component={ErrorPage}></Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","E:\\Projects\\Upsolve\\upsolve\\src\\reportWebVitals.js",[],"E:\\Projects\\Upsolve\\upsolve\\src\\loginPage.js",["119","120"],"E:\\Projects\\Upsolve\\upsolve\\src\\HomePage.js",["121","122"],"import React, { useEffect,useState } from 'react';\r\nimport {Profile} from './Api/problem.api'\r\n\r\nfunction HomePage() {\r\n    const [user,setuser] = useState(\"\");\r\n    useEffect(()=>{\r\n        \r\n    },[])\r\n    return(\r\n        <div>\r\n            {JSON.stringify(user)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default HomePage;","E:\\Projects\\Upsolve\\upsolve\\src\\LogoutPage.js",["123"],"import React, { useEffect,useState } from 'react';\r\n\r\n\r\nfunction LogoutPage() {\r\n    \r\n    useEffect(()=>{\r\n        window.localStorage.setItem(\"token\",null);\r\n        window.location = \"/login\"\r\n    },[])\r\n    return(\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default LogoutPage;","E:\\Projects\\Upsolve\\upsolve\\src\\ErroPage.js",[],"E:\\Projects\\Upsolve\\upsolve\\src\\RegisterPage.js",["124","125","126","127","128"],"\r\nimport fetch from 'node-fetch';\r\nimport React, { useState } from 'react';\r\nimport {getUserByname} from './Api/problem.api'\r\nimport NavigationMenu from './NavigationMenu';\r\nimport BoxTitle from './BoxTitile';\r\n\r\n\r\n\r\n    \r\n\r\n\r\n\r\nfunction RegisterPage() {\r\n    \r\n    \r\n    const [isloading,setisLoading] = useState(false);\r\n    const [Error,setError] = useState(\"\");\r\n    const [username,setusername] = useState(\"\");\r\n    const [password,setpassword] = useState(\"\");\r\n    const [confirmpassword,setconfirmpassword] = useState(\"\");\r\n    const [country,setcountry] = useState(\"\");\r\n    const [institution,setinstitution] = useState(\"\");\r\n    const [bio,setbio] = useState(\"\");\r\n    const [validatePassword,setvalidatePassword] = useState(\"Please fill out this field\");\r\n    \r\n    let checkPassword = (e) => {\r\n        let psw = e.target.value;\r\n\r\n        if(psw.length < 8){\r\n            setvalidatePassword(\"Atleast 8 characters required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[a-z]/g)){\r\n            setvalidatePassword(\"Lowercase character is required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[A-Z]/g)){\r\n            setvalidatePassword(\"Uppercase character is required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[0-9]/g)){\r\n            setvalidatePassword(\"A digit is required\");\r\n            return;\r\n        }\r\n\r\n        if(!psw.match(/[!\"#$%&'()*+,-.:;<=>?@[\\]^_`{|}~]/)){\r\n            setvalidatePassword(\"Special character is required\");\r\n            return;\r\n        }\r\n        setvalidatePassword(true);\r\n    }\r\n\r\n    return(\r\n\r\n        \r\n        <div>\r\n\r\n            <NavigationMenu></NavigationMenu>\r\n            \r\n            {Error !== \"\" ? \r\n            <div className=\"alert-heading text-center p-1 m-auto bg-danger text-light alert-animation\" style={{width: \"30%\",borderRadius: \"5px\",\"fontSize\": \"1.2rem\"}}>\r\n                {Error}\r\n            </div> \r\n            \r\n            : ''}\r\n\r\n            <div className=\"box\">\r\n                <BoxTitle title=\"Register\"></BoxTitle>\r\n                \r\n                <div className={\"box-content-dimension mb-5\"+ (isloading ? \" loading\" : \"\")}>\r\n                    <div className=\"box-form p-4\">\r\n                        \r\n                            <div class=\"form-group\">\r\n                                <label>Username:</label>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Enter codeForces Handle\" onChange={(e) => {setusername(e.target.value)}} required />\r\n                                {username === \"\" ? <div class=\"text-danger\">Please fill out this field.</div> : ''}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Country: <select onChange={(e) => {setcountry(e.target.value)}}>\r\n                                                    <option value=\"India\">India</option>\r\n                                                </select>\r\n                                </label>\r\n                                \r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Institution: <select onChange={(e) => {setinstitution(e.target.value)}}>\r\n                                                    <option value=\"India\">India</option>\r\n                                                </select>\r\n                                </label>\r\n                                \r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Password:</label>\r\n                                <input type=\"password\" class=\"form-control\" onChange={(e) => {setpassword(e.target.value);checkPassword(e)}} placeholder=\"Enter password\" required />\r\n                                {validatePassword !== true ? <div class=\"text-danger\">{validatePassword}</div> : ''}\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <label>Confirm Password:</label>\r\n                                <input type=\"password\" class=\"form-control\" onChange={(e) => {setconfirmpassword(e.target.value)}} placeholder=\"Confrim Password\" required />\r\n                                {confirmpassword === \"\" ? <div className=\"text-danger\">Please fill out this field.</div> : (confirmpassword !== password ? <div className=\"text-danger\">Should match the password</div> : '')}\r\n                                {}\r\n                            </div>\r\n                            \r\n                        \r\n                    </div>\r\n                    <button type=\"submit\" className=\"shadow\" onClick={async () => {\r\n                                if(validatePassword !== true || username === \"\" || password !== confirmpassword){return}\r\n                                setisLoading(true);\r\n                                let result = await getUserByname(username);\r\n                                console.log(result);\r\n                                if(!result || result === false){\r\n                                    // generate opt\r\n                                }\r\n                                else{\r\n                                    setisLoading(false);\r\n                                    setError(\"User name already exists\");\r\n                                    \r\n\r\n                                    setTimeout(() => {\r\n                                        setError(\"\");\r\n                                    },5000)\r\n                                    return;\r\n                                }\r\n                            }}>{isloading ? \"Loading...\" : \"Next\"}</button>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegisterPage;","E:\\Projects\\Upsolve\\upsolve\\src\\Leaderboard\\LeaderboardPage.js",["129","130"],"\r\nimport { useEffect, useState } from 'react';\r\nimport '../App.css';\r\nimport Leaderboard from './leaderboard';\r\n\r\nimport Skeleton from '@material-ui/lab/Skeleton'\r\nimport NavigationMenu from '../NavigationMenu';\r\n\r\nfunction LeaderboardPage() {\r\n    const country_list = require('country-list');\r\n    const [filter,setfilter] = useState({country:'',institution: '',username:''});\r\n    let countries = [];\r\n    country_list.getNames().map((country) => {\r\n        countries.push(<option value={country}>{country}</option>)\r\n    })\r\n    \r\n    \r\n  return (\r\n    <div className=\"App\">\r\n        \r\n        {<NavigationMenu></NavigationMenu> || <Skeleton width=\"100%\" height=\"2rem\"></Skeleton>}\r\n        <section class=\"Leaderboard\">\r\n\r\n                <div class=\"container-fluid leaderboard-container col-lg-8 col-md-6 col-11\">\r\n                    <div class=\"leaderboard-title\">\r\n                        <p>Leaderboard</p>\r\n                    </div>\r\n                    <div class=\"leaderboard-table\">\r\n                        \r\n                    <Leaderboard filter={filter} /> \r\n                        \r\n                        \r\n\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div class=\"container-fluid col-lg-3 col-md-4 col-11 filters\">\r\n                    <div class=\"filter-title\">\r\n                        <p>Filter</p>\r\n                    </div>\r\n                    <div class=\"filter-form row\">\r\n                        <form action=\"#\">\r\n                            <label for=\"country\">Country: </label>\r\n                            <select name=\"country\" onChange={(e)=> {setfilter({...filter,country:e.target.value})}} class=\"col-7\" id=\"country\">\r\n                                <option value=\"\">Any</option>\r\n                                {countries}\r\n                            </select>\r\n                            <label for=\"institution\">Institution: </label>\r\n                            <select name=\"institution\" onChange={(e)=> {setfilter({...filter,institution:e.target.value})}} class=\"col-7\" id=\"institution\">\r\n                                <option value=\"\"></option>\r\n                                <option value=\"India\">India</option>\r\n                                <option value=\"India\">India</option>\r\n                            </select>\r\n                            <label for=\"username\">Username: </label>\r\n                            <input type=\"text\" name=\"username\" onChange={(e)=> {setfilter({...filter,username:e.target.value})}} class=\"col-7\" id=\"username\"/>\r\n                            {/* <input type=\"submit\" class=\"btn-primary\" value=\"Submit\"/> */}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n        \r\n        </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LeaderboardPage;\r\n","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\Challenge.js",[],"E:\\Projects\\Upsolve\\upsolve\\src\\Profile\\ProfileRoute.js",["131","132"],"import React, { useEffect, useState } from 'react'\r\nimport NavigationMenu from '../NavigationMenu'\r\nimport {getUserByname} from '../Api/problem.api';\r\nimport ProfilePage from './ProfilePage'\r\n\r\nfunction ProfileRoute(props) {\r\n    \r\n    const [user,setuser] = useState({});\r\n    const paramUsername = props.match.params.username;\r\n    \r\n    \r\n\r\n    useEffect(async () => {\r\n        if(paramUsername === undefined){\r\n        \r\n            window.location = '/error';\r\n            \r\n            \r\n        }\r\n        \r\n        getUserByname(paramUsername).then((User) => {\r\n            if(!User){\r\n                console.log(User);\r\n                window.location = '/error';\r\n                return;\r\n            }\r\n            else{\r\n                console.log(User);\r\n                setuser(User);\r\n            }\r\n        })\r\n        \r\n        \r\n    },[])\r\n    \r\n    \r\n    \r\n    return (\r\n        <div>\r\n           <NavigationMenu></NavigationMenu> \r\n           {user._id ? <ProfilePage user={user}></ProfilePage> : <></>}\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileRoute;","E:\\Projects\\Upsolve\\upsolve\\src\\NavigationMenu.js",["133","134","135"],"import React,{useState,useEffect} from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport {logout,TokenAuthentication} from './Api/auth.api';\r\nfunction NavigationMenu() {\r\n\r\n    const [status,setstatus] = useState(false);\r\n    const [payload,setpayload] =useState({});\r\n    useEffect(()=>{\r\n        let payload = TokenAuthentication();\r\n        if(payload){\r\n            setstatus(true);\r\n            setpayload(payload)\r\n        }\r\n    },[])\r\n    return (\r\n        <section class=\"navigation-menu\">\r\n            <div class=\"nav-bar col-12\">\r\n                <p class=\"text-center\">Upsolve</p>\r\n                <div class=\"nav-items col-lg-3 col-6 text-center\">\r\n                    <a href=\"#\" class=\"back-btn\" >\r\n                        <Tooltip title=\"Back\" arrow>\r\n                            <div>\r\n                                <i class=\"fa fa-rocket\"></i>\r\n                            </div>\r\n                        </Tooltip>\r\n                    </a>\r\n                    <a href=\"#\" data-toogle=\"tooltip\" data-palcement=\"bottom\" title={status ? payload?.username : \"Login/Register\"}>\r\n                        <Tooltip title={status ? payload?.username : \"Login/Register\"} arrow>\r\n                            <div>\r\n                                <i class=\"fa fa-user\"></i>\r\n                            </div>\r\n                        </Tooltip>\r\n                    </a>\r\n                    <a href=\"#\" data-toogle=\"tooltip\" data-palcement=\"bottom\" title=\"Logout\">\r\n                        <Tooltip title=\"Logout\" arrow>\r\n                            <div onClick={() => {logout()}}>\r\n                                <i class=\"fa fa-sign-out\"></i>\r\n                            </div>\r\n                        </Tooltip>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default NavigationMenu;\r\n","E:\\Projects\\Upsolve\\upsolve\\src\\BoxTitile.js",[],"E:\\Projects\\Upsolve\\upsolve\\src\\Leaderboard\\leaderboard.js",["136","137"],"import {useState,useEffect} from 'react'; \r\nimport Entry from './entry';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport Paginate from 'react-paginate';\r\nimport {LeaderboardList} from '../Api/problem.api';\r\n\r\nfunction Leaderboard(props) {\r\n\r\n    \r\n\r\n    \r\n    const [items,setItems] = useState([]);\r\n    const [skip,setskip] = useState(1);\r\n    const [limit,setlimit] = useState(2);\r\n    const [count,setcount] = useState(0);\r\n    const [loading,setloading] = useState(true);\r\n    const filter = props.filter;\r\n    useEffect(()=>{\r\n        setskip(1);\r\n    },[filter])\r\n    useEffect(()=>{\r\n        setloading(true);\r\n        LeaderboardList(skip,limit,filter).then((result)=>{\r\n            setloading(false);\r\n            setItems(result.data);\r\n            setcount(result.count);\r\n        })  \r\n    },[skip,limit,filter]);\r\n\r\n\r\n    \r\n    var board = [];\r\n    \r\n    if(loading){\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        board.push(<Skeleton variant=\"rect\" width=\"100%\" height={40}></Skeleton>);\r\n        return board;\r\n    }\r\n\r\n    if(!items || items.length == 0){\r\n        board.push(<h1 style={{color: \"Orange\"}}>!! No User found !!</h1>);\r\n        return board;\r\n    }\r\n    // console.log(items);\r\n    items.forEach((el,i) => {\r\n        board.push(<Entry offset={(skip-1)*limit} id={i} name={el.username} streak={el.streak} />);\r\n    })\r\n    board.push(\r\n            \r\n            <Paginate containerClassName=\"paginate\" pageCount={Math.ceil(count/limit)} pageRangeDisplayed={5} marginPagesDisplayed={3} initialPage={skip - 1} previousLabel=\"<<\" nextLabel=\">>\" activeClassName=\"active-page\" onPageChange={(e)=>{setskip((e.selected) + 1)}}></Paginate>\r\n\r\n            \r\n        )\r\n    return board;\r\n}\r\n\r\nexport default Leaderboard;","E:\\Projects\\Upsolve\\upsolve\\src\\Api\\problem.api.js",[],"E:\\Projects\\Upsolve\\upsolve\\src\\Api\\auth.api.js",["138"],"E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ChallengeContent.js",[],"E:\\Projects\\Upsolve\\upsolve\\src\\authGaurd.js",[],"E:\\Projects\\Upsolve\\upsolve\\src\\Profile\\ProfilePage.js",["139","140","141","142","143","144","145","146","147","148","149","150"],"E:\\Projects\\Upsolve\\upsolve\\src\\Leaderboard\\entry.js",["151"],"import React from 'react';\r\nimport { CircularProgressbar } from 'react-circular-progressbar';\r\nimport 'react-circular-progressbar/dist/styles.css';\r\nexport default class Entry extends React.Component{\r\n\r\n    \r\n    render(){\r\n        let id = \"table\"+this.props.id;\r\n        let percentage = parseInt((this.props.streak/30)*100);\r\n        \r\n        return(\r\n            <div class=\"entry shadow\">\r\n                \r\n                <div class=\"rank\">{this.props.id + parseInt(this.props.offset) + 1} </div>\r\n                <div class=\"names\">{this.props.name}</div>\r\n                <CircularProgressbar className=\"PB\"\r\n  value={percentage}\r\n  text={this.props.streak}\r\n  styles={{\r\n    // Customize the root svg element\r\n    root: {},\r\n    // Customize the path, i.e. the \"completed progress\"\r\n    path: {\r\n      // Path color\r\n      stroke: 'linear-gradient(#0052D4, #4364F7, #6FB1FC)',\r\n      // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n      strokeLinecap: 'butt',\r\n      // Customize transition animation\r\n      transition: 'stroke-dashoffset 0.5s ease 0s',\r\n      // Rotate the path\r\n    //   transform: 'rotate(0.25turn)',\r\n      transformOrigin: 'center center',\r\n    },\r\n    // Customize the circle behind the path, i.e. the \"total progress\"\r\n    trail: {\r\n      // Trail color\r\n      stroke: '#d6d6d6',\r\n      // Whether to use rounded or flat corners on the ends - can use 'butt' or 'round'\r\n      strokeLinecap: 'butt',\r\n      // Rotate the trail\r\n    //   transform: 'rotate(0.25turn)',\r\n      transformOrigin: 'center center',\r\n    },\r\n    // Customize the text\r\n    text: {\r\n      // Text color\r\n      fill: 'linear-gradient(#0052D4, #4364F7, #6FB1FC)',\r\n      // Text size\r\n      fontSize: '2rem',\r\n      fontWeight: '800'\r\n    },\r\n    // Customize background - only used when the `background` prop is true\r\n    background: {\r\n      fill: 'transparent',\r\n    },\r\n  }}\r\n/>\r\n                    \r\n                \r\n            </div>\r\n        )\r\n    }\r\n};","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ChallengeTimer.js",[],"E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ChallengeDailyQues.js",["152"],"import React from 'react';\r\nimport ProblemCardTitle from './ProblemCardTitle'\r\nimport ProblemDescription from './ProblemDescription'\r\nimport  { useEffect, useState } from 'react';\r\nimport {dailyQuestion,getUser} from '../Api/problem.api';\r\nfunction ChallengeDailyQues(props) {\r\n\r\n    const [problem,setproblem] = useState({\r\n        name: \"\",\r\n        contestId: \"\",\r\n        index: \"\",\r\n        link: \"\",\r\n        rating: \"\",\r\n    });\r\n    const [solved,setsolved] = useState(\"\");\r\n    getUser(props.payload._id).then((user) => {setsolved(user.dailyQuestion)})\r\n    const [problemError,setproblemError] = useState(null);\r\n    useEffect(()=>{\r\n        if(!solved && solved !== \"\"){\r\n            dailyQuestion(props).then((problem)=>{\r\n                if(problem === false){\r\n                    setproblemError(\"Unable to fetch the Problem\")\r\n                    \r\n                }\r\n                else{\r\n                    setproblem(problem);\r\n                    setproblemError(null);\r\n                }\r\n            })\r\n        }\r\n    },[problemError,solved])\r\n    return(\r\n\r\n        <div className=\"dailyques-section\">\r\n            \r\n            <ProblemCardTitle solved={solved} title=\"Daily Question\"></ProblemCardTitle>\r\n            <ProblemDescription payload={props.payload} problem={problem} Error={problemError} refresh={() => {setproblemError(null)}} solved={solved} updatesolved={(result)=> {setsolved(result)}}></ProblemDescription>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChallengeDailyQues;","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ChallengeUpsolveQues.js",["153","154"],"import Skeleton from '@material-ui/lab/Skeleton';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ProblemCardTitle from './ProblemCardTitle'\r\nimport ProblemDescription from './ProblemDescription'\r\nimport {UpsolveQuestion,getUser} from '../Api/problem.api'\r\n\r\nfunction ChallengeUpsolveQues(props) {\r\n\r\n    const [problem,setproblem] = useState({\r\n        name: \"\",\r\n        contestId: \"\",\r\n        index: \"\",\r\n        link: \"\",\r\n        rating: \"\",\r\n    });\r\n    \r\n    const [upsolve,setupsolve] = useState(-1);\r\n    getUser(props.payload._id).then((user) => {setupsolve(user.UpsolveQuestion)})\r\n    const [problemError,setproblemError] = useState(null);\r\n    useEffect(()=>{\r\n        if(upsolve >= 0){\r\n            UpsolveQuestion(props).then((problem)=>{\r\n                \r\n                if(problem === false){\r\n                    setproblemError(\"Unable to fetch the Problem\")\r\n                    \r\n                }\r\n                else{\r\n                    setproblem(problem);\r\n                    setproblemError(null);\r\n                }\r\n            });\r\n        }\r\n    },[problemError,upsolve])\r\n    return(\r\n        \r\n           <div className=\"Upsolveques-section\">\r\n                \r\n                <ProblemCardTitle upsolve={Math.max(0,upsolve)} title=\"Upsolve Question\"></ProblemCardTitle>\r\n                <ProblemDescription payload={props.payload} problem={problem} Error={problemError} refresh={() => {setproblemError(null)}} solved={false} upsolve={upsolve} updateupsolve={(result)=> {setupsolve(upsolve + 1);setproblemError(null)}}></ProblemDescription>\r\n            </div>\r\n            \r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default ChallengeUpsolveQues;","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ProblemDescription.js",["155","156","157","158"],"import Skeleton from '@material-ui/lab/Skeleton';\r\nimport fetch from 'node-fetch';\r\nimport React, { useEffect,useState } from 'react';\r\nimport {Check} from '../Api/problem.api';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nfunction ProblemDescription(props) {\r\n\r\n    const [checking,setchecking] = useState(false);\r\n\r\n    let CheckProblem = () =>{\r\n        setchecking(true);\r\n        \r\n        Check(props,props.upsolve!==undefined ? \"upsolve\" : \"daily\").then((result) => {\r\n            setchecking(false);\r\n            \r\n            if(result === true){\r\n                props.upsolve===undefined ? props.updatesolved(true) : props.updateupsolve(true);\r\n            }\r\n        })\r\n    }\r\n    \r\n    return(\r\n        props.Error===null ?\r\n            !props.solved ?\r\n            (props.problem?.name ? \r\n            <div className=\"problem-description\">\r\n                <div className=\"description\">\r\n                    <label>Problem: </label>\r\n                    <a href={props.problem?.link} target=\"_blank\">{props.problem?.name}</a>\r\n                    <label>ContestID: </label>\r\n                    <a href={\"https://codeforces.com/contest/\"+props.problem?.contestId} target=\"_blank\">{props.problem?.contestId}</a>\r\n                    <label>Rating: </label>\r\n                    <p>{props.problem?.rating}</p>\r\n                </div>\r\n                <button className=\"shadow\" onClick={CheckProblem} disabled={checking}>{checking?\"Checking...\":\"Check\"}</button>\r\n  \r\n            </div>\r\n            :\r\n            <div style={{width:\"100%\"}}>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0 auto 0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0 auto 0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n                <Skeleton width=\"78%\" height=\"3rem\" style={{margin:\"0 auto 0.7rem auto\",color:\"grey\",borderRadius:\"999px\"}}></Skeleton>\r\n            </div>)\r\n            :\r\n            (\r\n                <div className=\"problem-description\">\r\n                    <h1>Solve More upsolve questions</h1>\r\n                </div>\r\n            ) \r\n        :\r\n        (\r\n            <div className=\"problem-description\">\r\n                <h1>{props.Error} <Tooltip title=\"Refresh\" arrow><i className=\"fa fa-refresh\" role=\"button\" onClick={() => {props.refresh()}}></i></Tooltip></h1>\r\n            </div>\r\n        )   \r\n    )\r\n}\r\n\r\nexport default ProblemDescription;","E:\\Projects\\Upsolve\\upsolve\\src\\Challenge\\ProblemCardTitle.js",["159"],"import { PromiseProvider } from 'mongoose';\r\nimport React from 'react';\r\n\r\nfunction ProblemCardTitle(props) {\r\n    \r\n    return(\r\n        \r\n        <div className=\"problem-card-title\">\r\n            <div className=\"checkmark-circle\">\r\n                {props.upsolve===undefined ? <div className={props.solved ?\"checkmark draw\":\"\"}></div> : <p>{props.upsolve}</p>}\r\n            </div>\r\n            <h1>{props.title}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProblemCardTitle;",{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":2,"column":34,"nodeType":"166","messageId":"167","endLine":2,"endColumn":38},{"ruleId":"164","severity":1,"message":"168","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":63,"column":21,"nodeType":"171","endLine":63,"endColumn":32},{"ruleId":"164","severity":1,"message":"172","line":2,"column":9,"nodeType":"166","messageId":"167","endLine":2,"endColumn":16},{"ruleId":"164","severity":1,"message":"173","line":5,"column":17,"nodeType":"166","messageId":"167","endLine":5,"endColumn":24},{"ruleId":"164","severity":1,"message":"174","line":1,"column":27,"nodeType":"166","messageId":"167","endLine":1,"endColumn":35},{"ruleId":"164","severity":1,"message":"168","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":13},{"ruleId":"164","severity":1,"message":"175","line":22,"column":12,"nodeType":"166","messageId":"167","endLine":22,"endColumn":19},{"ruleId":"164","severity":1,"message":"176","line":23,"column":12,"nodeType":"166","messageId":"167","endLine":23,"endColumn":23},{"ruleId":"164","severity":1,"message":"177","line":24,"column":12,"nodeType":"166","messageId":"167","endLine":24,"endColumn":15},{"ruleId":"164","severity":1,"message":"178","line":24,"column":16,"nodeType":"166","messageId":"167","endLine":24,"endColumn":22},{"ruleId":"164","severity":1,"message":"179","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":19},{"ruleId":"180","severity":1,"message":"181","line":13,"column":43,"nodeType":"182","messageId":"183","endLine":13,"endColumn":45},{"ruleId":"184","severity":1,"message":"185","line":13,"column":15,"nodeType":"182","endLine":34,"endColumn":6},{"ruleId":"184","severity":1,"message":"186","line":34,"column":7,"nodeType":"187","endLine":34,"endColumn":9,"suggestions":"188"},{"ruleId":"169","severity":1,"message":"170","line":20,"column":21,"nodeType":"171","endLine":20,"endColumn":51},{"ruleId":"169","severity":1,"message":"170","line":27,"column":21,"nodeType":"171","endLine":27,"endColumn":133},{"ruleId":"169","severity":1,"message":"170","line":34,"column":21,"nodeType":"171","endLine":34,"endColumn":94},{"ruleId":"164","severity":1,"message":"189","line":14,"column":18,"nodeType":"166","messageId":"167","endLine":14,"endColumn":26},{"ruleId":"190","severity":1,"message":"191","line":43,"column":31,"nodeType":"192","messageId":"193","endLine":43,"endColumn":33},{"ruleId":"164","severity":1,"message":"194","line":40,"column":10,"nodeType":"166","messageId":"167","endLine":40,"endColumn":22},{"ruleId":"180","severity":1,"message":"181","line":75,"column":46,"nodeType":"182","messageId":"183","endLine":75,"endColumn":48},{"ruleId":"195","severity":1,"message":"196","line":88,"column":196,"nodeType":"197","endLine":88,"endColumn":211},{"ruleId":"195","severity":1,"message":"196","line":89,"column":126,"nodeType":"197","endLine":89,"endColumn":141},{"ruleId":"198","severity":1,"message":"199","line":111,"column":21,"nodeType":"171","endLine":111,"endColumn":152},{"ruleId":"169","severity":1,"message":"170","line":134,"column":29,"nodeType":"171","endLine":134,"endColumn":111},{"ruleId":"200","severity":1,"message":"201","line":134,"column":37,"nodeType":"202","messageId":"203","endLine":134,"endColumn":59},{"ruleId":"169","severity":1,"message":"170","line":137,"column":29,"nodeType":"171","endLine":137,"endColumn":111},{"ruleId":"200","severity":1,"message":"201","line":137,"column":37,"nodeType":"202","messageId":"203","endLine":137,"endColumn":59},{"ruleId":"169","severity":1,"message":"170","line":140,"column":29,"nodeType":"171","endLine":140,"endColumn":107},{"ruleId":"200","severity":1,"message":"201","line":140,"column":37,"nodeType":"202","messageId":"203","endLine":140,"endColumn":59},{"ruleId":"169","severity":1,"message":"170","line":143,"column":29,"nodeType":"171","endLine":143,"endColumn":117},{"ruleId":"200","severity":1,"message":"201","line":143,"column":37,"nodeType":"202","messageId":"203","endLine":143,"endColumn":59},{"ruleId":"164","severity":1,"message":"204","line":8,"column":13,"nodeType":"166","messageId":"167","endLine":8,"endColumn":15},{"ruleId":"184","severity":1,"message":"205","line":31,"column":7,"nodeType":"187","endLine":31,"endColumn":28,"suggestions":"206"},{"ruleId":"164","severity":1,"message":"207","line":1,"column":8,"nodeType":"166","messageId":"167","endLine":1,"endColumn":16},{"ruleId":"184","severity":1,"message":"205","line":34,"column":7,"nodeType":"187","endLine":34,"endColumn":29,"suggestions":"208"},{"ruleId":"164","severity":1,"message":"168","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":13},{"ruleId":"164","severity":1,"message":"179","line":3,"column":17,"nodeType":"166","messageId":"167","endLine":3,"endColumn":26},{"ruleId":"195","severity":1,"message":"196","line":30,"column":51,"nodeType":"197","endLine":30,"endColumn":66},{"ruleId":"195","severity":1,"message":"196","line":32,"column":90,"nodeType":"197","endLine":32,"endColumn":105},{"ruleId":"164","severity":1,"message":"209","line":1,"column":10,"nodeType":"166","messageId":"167","endLine":1,"endColumn":25},"no-native-reassign",["210"],"no-negated-in-lhs",["211"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'fetch' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Profile' is defined but never used.","'setuser' is assigned a value but never used.","'useState' is defined but never used.","'country' is assigned a value but never used.","'institution' is assigned a value but never used.","'bio' is assigned a value but never used.","'setbio' is assigned a value but never used.","'useEffect' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'paramUsername'. Either include it or remove the dependency array.","ArrayExpression",["212"],"'setlimit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getFirstName' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","'id' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array.",["213"],"'Skeleton' is defined but never used.",["214"],"'PromiseProvider' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [paramUsername]",{"range":"221","text":"222"},"Update the dependencies array to be: [problemError, props, solved]",{"range":"223","text":"224"},"Update the dependencies array to be: [problemError, props, upsolve]",{"range":"225","text":"226"},[855,857],"[paramUsername]",[1045,1066],"[problemError, props, solved]",[1099,1121],"[problemError, props, upsolve]"]